<?xml version="1.0" encoding="UTF-8"?>
<!--
	This configuration file was written by the eclipse-cs plugin configuration editor
-->
<!--
Checkstyle-Configuration: C Thing LIO Style
Description:
Java coding style for the Life Information Organizer project
-->
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN" "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">
    <property name="severity" value="warning"/>
    <module name="TreeWalker">
        <module name="JavadocType"/>
        <module name="JavadocMethod"/>
        <module name="JavadocStyle"/>
        <module name="ArrayTrailingComma"/>
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="ConstantName"/>
        <module name="CovariantEquals"/>
        <module name="DefaultComesLast"/>
        <module name="DoubleCheckedLocking"/>
        <module name="EmptyForInitializerPad">
            <property name="option" value="space"/>
        </module>
        <module name="EmptyForIteratorPad">
            <property name="option" value="space"/>
        </module>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="FallThrough"/>
        <module name="FinalLocalVariable">
            <property name="tokens" value="PARAMETER_DEF, VARIABLE_DEF"/>
        </module>
        <module name="IllegalImport"/>
        <module name="ImportOrder">
            <property name="groups" value="java,javax,org,junit,junitx,com"/>
        </module>
        <module name="LeftCurly">
            <property name="tokens" value="LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE"/>
        </module>
        <module name="LeftCurly">
            <property name="option" value="nl"/>
            <property name="tokens" value="CLASS_DEF, CTOR_DEF, INTERFACE_DEF, METHOD_DEF"/>
        </module>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodParamPad"/>
        <module name="ModifierOrder"/>
        <module name="NeedBraces"/>
        <module name="OperatorWrap">
            <property name="option" value="eol"/>
        </module>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="ParenPad"/>
        <module name="RedundantImport"/>
        <module name="RedundantModifier"/>
        <module name="StaticVariableName"/>
        <module name="TabCharacter"/>
        <module name="TypecastParenPad"/>
        <module name="TypeName"/>
        <module name="UnusedImports"/>
        <module name="NoWhitespaceAfter">
            <property name="allowLineBreaks" value="false"/>
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, TYPECAST"/>
        </module>
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI"/>
        </module>
        <module name="WhitespaceAround">
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,              LITERAL_FINALLY, LITERAL_FOR,              LITERAL_IF, LITERAL_RETURN,              LITERAL_SYNCHRONIZED, LITERAL_TRY,              LITERAL_WHILE, LOR, MINUS,              MINUS_ASSIGN, MOD, MOD_ASSIGN,              NOT_EQUAL, PLUS, PLUS_ASSIGN,              QUESTION, RCURLY, SL, SLIST,              SL_ASSIGN, SR, SR_ASSIGN, STAR,              STAR_ASSIGN, LITERAL_ASSERT"/>
        </module>
        <module name="HiddenField">
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>
        <module name="IllegalType"/>
        <module name="InnerAssignment"/>
        <module name="JUnitTestCase"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="PackageDeclaration"/>
        <module name="RedundantThrows"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="DeclarationOrder"/>
        <module name="ParameterAssignment"/>
        <module name="ExplicitInitialization"/>
        <module name="MissingCtor"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="MutableException"/>
        <module name="UpperEll"/>
        <module name="FinalParameters">
            <property name="tokens" value="METHOD_DEF,CTOR_DEF,LITERAL_CATCH"/>
        </module>
        <module name="ArrayTypeStyle"/>
        <module name="Header">
            <property name="headerFile" value="${config_loc}/FileHeader.java"/>
            <property name="ignoreLines" value="2"/>
        </module>
        <module name="AvoidStarImport"/>
        <module name="VisibilityModifier"/>
        <module name="UncommentedMain"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens" value="LITERAL_CATCH, LITERAL_TRY, LITERAL_ELSE"/>
        </module>
        <module name="AbstractClassName"/>
        <module name="IllegalCatch">
            <property name="illegalClassNames" value="java.lang.Throwable, java.lang.RuntimeException"/>
        </module>
    </module>
    <module name="NewlineAtEndOfFile"/>
    <module name="Translation"/>
</module>
